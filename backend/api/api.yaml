openapi: 3.0.0

info:
  version: 1.0.0
  title: "VibeCar API"
  description: "Esta es la API del servicio de compartición de coche VibeCar."

servers:
  - url: https://localhost:8080/api/v1

paths:
  /usuarios:
    get:
      description: "Devuelve todos los usuarios del sistema, o busca usuarios por nombre."
      parameters:
        - name: search
          description: "El término por el que buscar por nombre."
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: "Éxito, devuelve todos los usuarios."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
    post:
      description: "Crea un nuevo usuario."
      responses:
        "200":
          description: "Éxito, devuelve el ID del nuevo usuario."
          content:
            application/json:
              schema:
                type: object
                properties:
                  new_id:
                    type: string
                    description: "El ID del nuevo usuario."
        "400":
          description: "Error, la entrada no está en formato JSON o faltan campos."
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
              
  /usuarios/{id}:
    get:
      description: "Devuelve información de un usuario dado su ID."
      parameters:
        - name: id
          description: "El ID del usuario a devolver."
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Éxito, devuelve información del usuario."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        "404":
          description: "Error, el usuario no existe."
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
    put:
      description: "Modifica datos de un usuario."
      parameters:
        - name: id
          description: "El ID del usuario a modificar."
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: "Éxito, usuario modificado."
        "400":
          description: "Error, la entrada no está en formato JSON o faltan campos."
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        "404":
          description: "Error, el usuario no existe."
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
    delete:
      description: "Elimina un usuario."
      parameters:
        - name: id
          description: "El ID del usuario a eliminar."
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: "Éxito, usuario eliminado."
        "404":
          description: "Error, el usuario no existe."
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string

  /trayectos:
    get:
      description: "Devuelve todos los trayectos del sistema."
      responses:
        "200":
          description: "Éxito, devuelve todos los trayectos."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trayecto'
    post:
      description: "Crea un nuevo trayecto."
      responses:
        "200":
          description: "Éxito, devuelve el ID del nuevo trayecto."
          content:
            application/json:
              schema:
                type: object
                properties:
                  new_id:
                    type: string
                    description: "El ID del nuevo trayecto."
        "400":
          description: "Error, la entrada no está en formato JSON o faltan campos."
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string

  /trayectos/{id}:
    get:
      description: "Devuelve información de un trayecto dado su ID."
      parameters:
        - name: id
          description: "El ID del trayecto a devolver."
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Éxito, devuelve información del trayecto."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trayecto'
        "404":
          description: "Error, el trayecto no existe."
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
    put:
      description: "Modifica datos de un trayecto."
      parameters:
        - name: id
          description: "El ID del trayecto a modificar."
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: "Éxito, trayecto modificado."
        "400":
          description: "Error, la entrada no está en formato JSON o faltan campos."
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        "404":
          description: "Error, el trayecto no existe."
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
    delete:
      description: "Elimina un trayecto."
      parameters:
        - name: id
          description: "El ID del trayecto a eliminar."
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: "Éxito, trayecto eliminado."
        "404":
          description: "Error, el trayecto no existe."
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
  /incidencias/search:
    get:
      description: "Devuelve todas las incidencias de carretera o las filtra según localidad o provincia"
      parameters:
        - name: localidad
          description: "Nombre de la localidad."
          in: query
          required: false
          schema:
            type: string
        - name: provincia
          description: "Nombre de la provincia."
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: "Éxito, devuelve las incidencias."
        "404":
          description: "No se han encontrado incidencias que cumplan las condiciones."
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string 
  /gasolineras/search:
    get:
      description: "Devuelve las todas las gasolineras o las filtra según localidad o tipo"
      parameters:
        - name: localidad
          description: "Nombre de la localidad."
          in: query
          required: false
          schema:
            type: string
        - name: tipo
          description: "Tipo de la gasolina."
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: "Éxito, devuelve las gasolineras."
        "404":
          description: "No se han encontrado gasolineras que cumplan las condiciones."
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
 /trayectosUsuario/{id}:
 get:
      description: "Devuelve todos los trayectos pertenecientes a un Usuario"
      parameters:
        - name: id
          description: "El ID del usuario."
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Éxito, devuelve los trayectos."
        "404":
          description: "No se han encontrado trayectos que cumplan las condiciones."
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string 
 /reservas:
    get:
      description: "Devuelve todas las reservas del sistema."
      responses:
        "200":
          description: "Éxito, devuelve todas las reservas."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reserva'
    post:
      description: "Crea una nueva reserva"
      responses:
        "200":
          description: "Éxito, devuelve el ID de la nueva reserva."
          content:
            application/json:
              schema:
                type: object
                properties:
                  new_id:
                    type: string
                    description: "El ID de la nueva reserva."
        "400":
          description: "Error, la entrada no está en formato JSON o faltan campos."
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
  /reservas/{id}:
    get:
      description: "Devuelve información de una reserva dada su ID."
      parameters:
        - name: id
          description: "El ID de la reserva a devolver."
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Éxito, devuelve información de la reserva."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reserva'
        "404":
          description: "Error, la reserva no existe."
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
    put:
      description: "Modifica datos de una reserva."
      parameters:
        - name: id
          description: "El ID de la reserva a modificar."
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: "Éxito, reserva modificada."
        "400":
          description: "Error, la entrada no está en formato JSON o faltan campos."
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        "404":
          description: "Error, la reserva no existe."
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
    delete:
      description: "Elimina una reserva."
      parameters:
        - name: id
          description: "El ID de la reserva a eliminar."
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: "Éxito, reserva eliminada."
        "404":
          description: "Error, la reserva no existe."
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
  /reservasCliente/{id}:
  get:
      description: "Devuelve todas las reservas pertenecientes a un Usuario"
      parameters:
        - name: id
          description: "El ID del usuario."
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Éxito, devuelve las reservas."
        "404":
          description: "No se han encontrado reservas que cumplan las condiciones."
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
  /reservasTrayecto/{id}:
  get:
      description: "Devuelve todas las reservas pertenecientes a un Trayecto"
      parameters:
        - name: id
          description: "El ID del trayecto."
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Éxito, devuelve las reservas."
        "404":
          description: "No se han encontrado reservas que cumplan las condiciones."
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    
components:
  schemas:
    Usuario:
      type: object
      properties:
        "_id":
          type: string
        nombre:
          type: string
        apellidos:
          type: string
        email:
          type: string
        telefono:
          type: string
        contrasenia:
          type: string
        link_paypal:
          type: string
        url_foto_perfil:
          type: string
        rol:
          type: integer
      required:
        - _id
        - nombre
        - apellidos
        - email
        - telefono
        - contrasenia
        - link_paypal
        - url_foto_perfil
        - rol
    Trayecto:
      type: object
      properties:
        "_id":
          type: string
        conductor:
          type: object
          properties:
            "_id":
              type: string
            nombre:
              type: string
            url_foto_perfil:
              type: string
          required:
            - _id
            - nombre
            - url_foto_perfil
        origen:
          type: string
        destino:
          type: string
        fecha_hora_salida:
          type: string
        duracion_estimada:
          type: integer
        plazas:
          type: integer
        precio:
          type: number
        permitir_valoraciones:
          type: boolean
      required:
        - _id
        - conductor
        - origen
        - destino
        - fecha_hora_salida
        - duracion_estimada
        - plazas
        - precio
        - permitir_valoraciones
    Reserva:
      type: object
      properties:
        "_id":
          type: string
        trayecto:
          type: object
          properties:
            "_id":
              type: string
            destino:
              type: string
            origen:
              type: string
          required:
            - _id
            - destino
            - origen
        cliente:
          type: object
          properties:
            "_id":
              type: string
            nombre:
              type: string
            url_foto_perfil:
              type: string
          required:
            - _id
            - nombre
            - url_foto_perfil
        estado:
          type: string
        pasajeros:
          type: integer
        fecha_hora_salida:
          type: string
      required:
        - _id
        - trayecto
        - cliente
        - estado
        - pasajeros
        - fecha_hora_salida
