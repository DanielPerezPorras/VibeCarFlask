openapi: 3.0.0

info:
  version: 1.0.0
  title: "VibeCar API"
  description: "Esta es la API del servicio de compartición de coche VibeCar."

servers:
  - url: https://localhost:8080/api/v1

paths:
  /usuarios:
    get:
      description: "Devuelve todos los usuarios del sistema."
      responses:
        "200":
          description: "Éxito, devuelve todos los usuarios."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
    post:
      description: "Crea un nuevo usuario."
      responses:
        "200":
          description: "Éxito, devuelve el ID del nuevo usuario."
          content:
            application/json:
              schema:
                type: object
                properties:
                  new_id:
                    type: integer
                    description: "El ID del nuevo usuario."
        "400":
          description: "Error, faltan campos o la petición no está en formato JSON."
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
              
  /usuarios/{id}:
    get:
      description: "Devuelve información de un usuario dado su ID."
      parameters:
        - name: id
          description: "El ID del usuario a devolver."
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Usuario'
      responses:
        "200":
          description: "Éxito, devuelve información del usuario."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        "404":
          description: "Error, el usuario no existe."
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
    put:
      description: "Modifica datos de un usuario."
      parameters:
        - name: id
          description: "El ID del usuario a eliminar."
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: "Éxito, usuario modificado."
        "404":
          description: "Error, el usuario no existe."
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
    delete:
      description: "Elimina un usuario."
      parameters:
        - name: id
          description: "El ID del usuario a eliminar."
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: "Éxito, usuario eliminado."
        "404":
          description: "Error, el usuario no existe."
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string


components:
  schemas:
    Usuario:
      type: object
      properties:
        "_id":
          type: integer
        nombre:
          type: string
        apellidos:
          type: string
        email:
          type: string
        telefono:
          type: string
        contrasenia:
          type: string
        link_paypal:
          type: string
        url_foto_perfil:
          type: string
        rol:
          type: integer
      required:
        - _id
        - nombre
        - apellidos
        - email
        - telefono
        - contrasenia
        - link_paypal
        - url_foto_perfil
        - rol
